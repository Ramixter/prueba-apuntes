{"config":{"lang":["es"],"separator":"[\\s\\-,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Ramiro Torres G","text":""},{"location":"#contenido","title":"Contenido","text":"<p>Concetos B\u00e1sicos</p>"},{"location":"conceptos-basicos/direcciones-ip/","title":"Direcciones IP (IPv4 e IPv6)","text":"Nota <p>Las direcciones IP son identificadores num\u00e9ricos \u00fanicos que se utilizan para identificar dispositivos en una red, como ordenadores, routers, servidores y otros dispositivos conectados a Internet.</p> <p>Existen dos versiones de direcciones IP: IPv4 e IPv6. La versi\u00f3n IPv4 utiliza un formato de direcci\u00f3n de 32 bits y se utiliza actualmente en la mayor\u00eda de las redes. La versi\u00f3n IPv6 utiliza un formato de direcci\u00f3n de 128 bits y se est\u00e1 implementando gradualmente en todo el mundo para hacer frente a la escasez de direcciones IPv4.</p> <p>Las direcciones IPv4 se representan como cuatro n\u00fameros separados por puntos, como 192.168.0.1, mientras que las direcciones IPv6 se representan en notaci\u00f3n hexadecimal y se separan por dos puntos, como 2001:0db8:85a3:0000:0000:8a2e:0370:7334.</p> <p>Una direcci\u00f3n IP la tenemos que ver como una etiqueta num\u00e9rica que indentifica de manera l\u00f3gica y jerarquica a una interfaz en la red de un dispositivo que utilice  el protocolo de internet.</p> <p>Podemos usar el comando <code>ifconfig</code> para ver la ip de nuestra m\u00e1quina:</p> Ejemplo <p><pre><code>ifconfig\n</code></pre> <pre><code>enp0s3: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500\n    inet 192.168.1.132  netmask 255.255.255.0  broadcast 192.168.1.255\n    inet6 fe80::b79e:5c10:c25c:8701  prefixlen 64  scopeid 0x20&lt;link&gt;\n    ether 08:00:27:2d:73:8e  txqueuelen 1000  (Ethernet)\n    RX packets 21  bytes 2069 (2.0 KiB)\n    RX errors 0  dropped 8  overruns 0  frame 0\n    TX packets 21  bytes 3364 (3.2 KiB)\n    TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n</code></pre> </p> <p>Si por ejemplo hicieramos un <code>hostname -I</code> ver\u00edamos que nos reporta \u00fanicamente cual es nuestra IP:</p> Ejemplo <p><pre><code>hostname -I\n</code></pre> <pre><code>192.168.1.132\n</code></pre> </p> <p>Tenemos que recordar que 1 byte son 8 bits, por lo que a la hora de tratar de representar la IP con un total de 32 bits para poder representar nuestra IP:</p> <ul> <li> <p>Sabemos que nuestra IP es la siguiente: 192.168.1.132, por lo que podemos hacer lo siguiente para representar nuestra IP en los octetos separados:</p> <p><pre><code>echo \"192.168.11.42\"\n</code></pre> <pre><code>192.168.11.42\n</code></pre> </p> <p><pre><code>echo \"$(echo \"obase=2; 192\" | bc).168.11.42\"\n</code></pre> <pre><code>11000000.168.11.42\n</code></pre> </p> <p><pre><code>echo \"$(echo \"obase=2; 192\" | bc).$(echo \"obase=2; 168\" | bc).$(echo \"obase=2; 11\" | bc).$(echo \"obase=2; 42\" | bc)\"\n</code></pre> <pre><code>11000000.10101000.1011.101010\n</code></pre> </p> </li> </ul>"},{"location":"conceptos-basicos/direcciones-mac/","title":"Direcciones MAC (OUI y NIC)","text":"Nota <p>La direcci\u00f3n MAC es un n\u00famero hexadecimal de 12 d\u00edgitos (n\u00famero binario de 6 bytes), que est\u00e1 representado principalmente por notaci\u00f3n hexadecimal de dos puntos.</p> <p>Los primeros 6 d\u00edgitos (digamos 00:40:96) del MAC Address identifican al fabricante, llamado OUI (Identificador \u00danico Organizacional). El Comit\u00e9 de la Autoridad de Registro de IEEE asigna estos prefijos MAC a sus proveedores registrados.</p> <p>Los seis d\u00edgitos m\u00e1s a la derecha representan el controlador de interfaz de red, que es asignado por el fabricante.</p> <p>Es decir, los primeros 3 bytes (24 bits) representan el fabricante de la tarjeta, y los \u00faltimos 3 bytes (24 bits) identifican la tarjeta particular de ese fabricante. Cada grupo de 3 bytes se puede representar con 6 d\u00edgitos hexadecimales, formando un n\u00famero hexadecimal de 12 d\u00edgitos que representa la MAC completa.</p> <p>Para una b\u00fasqueda de fabricante utilizando direcciones MAC, se requieren al menos los primeros 3 bytes (6 caracteres) de la direcci\u00f3n MAC. Una de las herramientas que vemos en este m\u00f3dulo para lograr dicho fin es 'macchanger', una herramienta de GNU/Linux para la visualizaci\u00f3n y manipulaci\u00f3n de direcciones MAC.</p> <p>Por ejemplo, si ejecutamos el comando <code>ifconfig</code> podremos ver que nos aparece nuestra direcci\u00f3n MAC:</p> <pre><code>ifconfig\n</code></pre> <pre><code>enp0s3: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500\n    inet 192.168.1.132  netmask 255.255.255.0  broadcast 192.168.1.255\n    inet6 fe80::b79e:5c10:c25c:8701  prefixlen 64  scopeid 0x20&lt;link&gt;\n    ether 08:00:27:2d:73:8e  txqueuelen 1000  (Ethernet)\n    RX packets 21  bytes 2069 (2.0 KiB)\n    RX errors 0  dropped 8  overruns 0  frame 0\n    TX packets 21  bytes 3364 (3.2 KiB)\n    TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n</code></pre> <p>En redes de computadoras, una direcci\u00f3n MAC es un identificador de 48 bits que corresponde de forma \u00fanica a una tarjeta o dispositivo de red. Se le conoce tambi\u00e9n como direcci\u00f3n f\u00edsica y es \u00fanica para cada dispositivo.</p> <p>Hay herramientas como macchanger que nos permiten modificar nuestra direci\u00f3n MAC.</p> <p>En cuanto a estructura respecta, si dividimos nuestra direcci\u00f3n MAC en dos partes, podremos ver lo siguiente:</p> <code>ether 08:00:27:2d:73:8e</code> <ul> <li>OUI: ether 08:00:27:2d:73:8e</li> <li>NIC: ether 08:00:27:2d:73:8e</li> </ul> <p>Imaginemos que vamos a escanear la una red con <code>arp-scan</code> aprovechando una interfaz de red de manera que especificamos la interfaz de red que vamos a usar:</p> <pre><code>arp-scan -I ens33 --localnet\n</code></pre> <pre><code>Interface: enp0s3, type: EN10MB, MAC: 08:00:27:2d:73:8e, IPv4: 192.168.1.132\nStarting arp-scan 1.9.7 with 256 hosts (https://github.com/royhills/arp-scan)\n192.168.1.1 a0:18:42:5c:30:b8   (Unknown)\n192.168.1.130   d8:f8:83:d9:17:73   (Unknown)\n192.168.1.128   b0:be:76:0c:62:e2   TP-LINK TECHNOLOGIES CO.,LTD.\n\n3 packets received by filter, 0 packets dropped by kernel\nEnding arp-scan 1.9.7: 256 hosts scanned in 2.429 seconds (105.39 hosts/sec). 3 responded\n</code></pre> <p>Si por ejemplo nos cogemos el OUI de una de las direcciones MAC que hemos obtenido, podemos usar macchanger para poder filtrar:</p> <pre><code>macchanger -l | grep -i 'TP-LINK TECHNOLOGIES CO.,LTD.'\n</code></pre> <pre><code>...\n12990 - 08:57:00 - TP-LINK TECHNOLOGIES CO.,LTD.\n13091 - 0c:72:2c - TP-LINK TECHNOLOGIES CO.,LTD.\n13098 - 0c:82:68 - TP-LINK TECHNOLOGIES CO.,LTD.\n13313 - 14:86:92 - TP-LINK TECHNOLOGIES CO.,LTD.\n13551 - 1c:fa:68 - TP-LINK TECHNOLOGIES CO.,LTD.\n13754 - 28:2c:b2 - TP-LINK TECHNOLOGIES CO.,LTD.\n14002 - 30:b5:c2 - TP-LINK TECHNOLOGIES CO.,LTD.\n...\n</code></pre> <p>De tal manera que podemos usar esto para hacernos una idea de a lo que nos estamos enfrentando, aunque no siempre es del todo efectivo, pero lo podremos usar en ciertas ocasiones.</p>"},{"location":"conceptos-basicos/modelo-osi/","title":"El modelo OSI","text":"Nota <p>En redes de ordenadores, el modelo OSI (Open Systems Interconnection) es una estructura de siete capas que se utiliza para describir el proceso de comunicaci\u00f3n entre dispositivos. Cada capa proporciona servicios y funciones espec\u00edficas, que permiten a los dispositivos comunicarse a trav\u00e9s de la red.</p> <p>A continuaci\u00f3n, se describen brevemente las siete capas del modelo OSI:</p> <ol> <li> <p>Capa f\u00edsica: Es la capa m\u00e1s baja del modelo OSI, que se encarga de la transmisi\u00f3n de datos a trav\u00e9s del medio f\u00edsico de la red, como cables de cobre o fibra \u00f3ptica.</p> </li> <li> <p>Capa de enlace de datos: Esta capa se encarga de la transferencia confiable de datos entre dispositivos en la misma red. Tambi\u00e9n proporciona funciones para la detecci\u00f3n y correcci\u00f3n de errores en los datos transmitidos.</p> </li> <li> <p>Capa de red: La capa de red se ocupa del enrutamiento de paquetes de datos a trav\u00e9s de m\u00faltiples redes. Esta capa utiliza direcciones l\u00f3gicas, como direcciones IP, para identificar dispositivos y rutas de red.</p> </li> <li> <p>Capa de transporte: La capa de transporte se encarga de la entrega confiable de datos entre dispositivos finales, proporcionando servicios como el control de flujo y la correcci\u00f3n de errores.</p> </li> <li> <p>Capa de sesi\u00f3n: Esta capa se encarga de establecer y mantener las sesiones de comunicaci\u00f3n entre dispositivos. Tambi\u00e9n proporciona servicios de gesti\u00f3n de sesiones, como la autenticaci\u00f3n y la autorizaci\u00f3n.</p> </li> <li> <p>Capa de presentaci\u00f3n: La capa de presentaci\u00f3n se encarga de la representaci\u00f3n de datos, proporcionando funciones como la codificaci\u00f3n y decodificaci\u00f3n de datos, la compresi\u00f3n y el cifrado.</p> </li> <li> <p>Capa de aplicaci\u00f3n: La capa de aplicaci\u00f3n proporciona servicios para aplicaciones de usuario finales, como correo electr\u00f3nico, navegadores web y transferencia de archivos.</p> </li> </ol> <p>Comprender la estructura en capas del modelo OSI es esencial para cualquier analista de seguridad, ya que permite tener una visi\u00f3n completa del funcionamiento de la red y de las posibles vulnerabilidades que puedan existir en cada una de las capas.</p> <p>Esto nos permite identificar de manera efectiva los puntos d\u00e9biles de la red y aplicar medidas de seguridad adecuadas para protegerla de posibles ataques.</p> <p>El proceso de enviar una solicitud a un servidor es algo similar a enviar un paquete por correo tradicional. Es decir, todos los paquetes que enviamos desde nuestro ordenador pasan por una serie de pasos antes de llegar a su destinatario. Y estos pasos son los que llamaos modelo OSI.</p> <p>Lo que hace el modelo OSi es agrupar los protocolos en grupos espec\u00edficos o Capas.</p> <p>Cuando hacemos una solicitud a un servidor web, esta solicitud recorre un largo camino desde nuestra m\u00e1quina hasta el servidor. Esta solicitud normalmente sale de nuestro equipo por un cable de red o por el aire en caso de que usemos wifi. Pasa por nuestro proveedor de internet y por varios otros servidores hasta que luego llega al destino.</p> <p>Entonces en este proceso tenemos 7 capas:</p> <ol> <li>F\u00edsica</li> <li>Datos</li> <li>Red</li> <li>Transporte</li> <li>Sesi\u00f3n</li> <li>Presentaci\u00f3n</li> <li>Aplicaci\u00f3n</li> </ol> <p>Entonces si continuamos con el ejemplo del correo tradiciona, tendr\u00edamos que:</p> <ul> <li> <p>Capa 1 F\u00edsica: las carreteras que toman los paquetes para llegar al destino. Esta capa especifica los dispositivos como hubs y los medios de transmisi\u00f3n, como los cables de red. Los datos se transmiten por estos medios y se procesan en la siguiente capa.</p> </li> <li> <p>Capa 2: Capaa de Enlace: esta capa actua como un inspector, es decir, observa si el paquete tiene alg\u00fan defecto en su formato y controla el flujo con el que se envian los paquetes. En esta capa, los datos recibidos del medio f\u00edsico se verifican para ver si tienen un error, y en caso de tenerlo pues tratar de ver si se puede corregir. De esta forma las capas superiores pueden asumir una transmisi\u00f3n pr\u00e1cticamente sin errores. Esta capa tambi\u00e9n controla el flujo de datos que se transmiten.</p> </li> <li> <p>Capa 3: Capaa de Rede: supongamos que enviamos una carta, entonces la oficina de correos verifica el destinatario y el remitente del mensaje. En el caso de que hayan demasiados mensajes para enviar, pueden llegar a priorizar cu\u00e1les se enviar\u00e1n primero y cual es la mejor manera de enviar la carta o el paquete. Y esto es exactamente lo que hace la capa 3, es decir, act\u00faa como una oficina de correos. Quizas esta sea la capa m\u00e1s activa de la red especialmente en internet y es en esta capa donde tenemos el direccionamiento IP de origen y destino. Puede priorizar algunos paquetes y decidir qu\u00e9 rutas seguir para enviar los datos.</p> </li> <li> <p>Capa 4: Capa de Transporte: en esta capa estar\u00edan los caminoes que llevan las cartas y los paquetes. Es justamente esta capa la que garantiza el env\u00edo y la recepci\u00f3n de los paquetes provenientes de la capa 3. Gestiona el trasnporte de los paquetes para garantizar el \u00e9xito en el env\u00edo y en la recepci\u00f3n de datos. Y los protocolos comunes en esta capa son el TCP y UDP.</p> </li> <li> <p>Capa 5: Capa de Sesi\u00f3n: esta capa es la responsable de establecer y terminar la conexi\u00f3n entre hosts, adem\u00e1s de realizar el establecimiento de sesiones. Esta capa tambi\u00e9n brinda cierto soporte como registros de logs y la realizaci\u00f3n de tareas de seguridad.</p> </li> <li> <p>Capa 6: Capa de Presentaci\u00f3n: esta capa es la responsable de traducir todos los datos para que la utilice la siguiente capa, la capa de Aplicaci\u00f3n. En esta capa tendr\u00edamos la conversi\u00f3n de c\u00f3digo a caracteres, la conversi\u00f3n y compresi\u00f3n de los datos y en caso de ser necesario el cifrado de los datos. Una vez tratados estos datos estar\u00edan listos para usarse en la siguiente capa que es la \u00faltima, la capa de Aplicaci\u00f3n.</p> </li> <li> <p>Capa 7: Capa de Apicaci\u00f3n: esta es la capa para consumir los datos. En esta capa podr\u00edamos enviar correos electr\u00f3nicos, transferir archivos, acceder a sitios web, conectarnos de forma remota a otras m\u00e1quinas, entre otras muchas cosas. Es en esta capa justamente donde tendr\u00edamos los protocolos m\u00e1s conocidos como el HTTP y FTP.</p> </li> </ul>"},{"location":"conceptos-basicos/protocolos-comunes/","title":"Protocolos comunes (UDP, TCP)","text":"Nota <p>Los protocolos TCP (Transmission Control Protocol) y UDP (User Datagram Protocol) son dos de los protocolos de red m\u00e1s comunes utilizados en la transferencia de datos a trav\u00e9s de redes de ordenadores.</p> <p>El protocolo TCP, es un protocolo orientado a la conexi\u00f3n que proporciona una entrega de datos confiable, mientras que el protocolo UDP, es un protocolo no orientado a conexi\u00f3n el cual no garantiza la entrega de datos.</p> <p>Una parte crucial del protocolo TCP es el Three-Way Handshake, un procedimiento utilizado para establecer una conexi\u00f3n entre dos dispositivos. Este procedimiento consta de tres pasos: SYN, SYN-ACK y ACK, en los que se sincronizan los n\u00fameros de secuencia y de reconocimiento de los paquetes entre los dispositivos. El Three-Way Handshake es fundamental para establecer una conexi\u00f3n confiable y segura a trav\u00e9s de TCP.</p> <p>Puertos TCP comunes:</p> <ul> <li>21: FTP (File Transfer Protocol) \u2013 permite la transferencia de archivos entre sistemas.</li> <li>22: SSH (Secure Shell) \u2013 un protocolo de red seguro que permite a los usuarios conectarse y administrar sistemas de forma remota.</li> <li>23: Telnet \u2013 un protocolo utilizado para la conexi\u00f3n remota a dispositivos de red.</li> <li>80: HTTP (Hypertext Transfer Protocol) \u2013 el protocolo que se utiliza para la transferencia de datos en la World Wide Web.</li> <li>443: HTTPS (Hypertext Transfer Protocol Secure) \u2013 la versi\u00f3n segura de HTTP, que utiliza encriptaci\u00f3n SSL/TLS para proteger las comunicaciones web.</li> </ul> <p>Puertos UDP comunes:</p> <ul> <li>53: DNS (Domain Name System) \u2013 un sistema que traduce nombres de dominio en direcciones IP.</li> <li>67/68: DHCP (Dynamic Host Configuration Protocol) \u2013 un protocolo utilizado para asignar direcciones IP y otros par\u00e1metros de configuraci\u00f3n a los dispositivos en una red.</li> <li>69: TFTP (Trivial File Transfer Protocol) \u2013 un protocolo simple utilizado para transferir archivos entre dispositivos en una red.</li> <li>123: NTP (Network Time Protocol) \u2013 un protocolo utilizado para sincronizar los relojes de los dispositivos en una red.</li> <li>161: SNMP (Simple Network Management Protocol) \u2013 un protocolo utilizado para administrar y supervisar dispositivos en una red.</li> </ul> <p>Cabe destacar que estos son solo algunos de los m\u00e1s comunes. Existen muchos m\u00e1s puertos los cuales operan tanto por TCP como por UDP.</p> <p>A medida que avancemos en los m\u00f3dulos, tendremos la oportunidad de ver muchos otros puertos y protocolos utilizados en redes de ordenadores. Asimismo, veremos t\u00e9cnicas para analizar y explotar vulnerabilidades en su implementaci\u00f3n.</p> <p>La principal diferencia entre los protocolos TCP y UDP es que TCP es un protocolo orientado a conexi\u00f3n. La gran mayor\u00eda de dispositivos lo utilizan para comunicarse a trav\u00e9s de internet.</p> <p>As\u00ed mismo, TCP es uno de los principales protocolos en redes. El protocolo TCP proporciona verificaci\u00f3n de errores adem\u00e1s de garantizar la entrega de datos y que los paquetes se entreguen en el orden en el que fueron enviados.active</p> <p>Por el contrario UDP es un protocolo sin conexi\u00f3n. A diferencia del protocolo TCP, el protocolo UDP no garantiza la entrega de datos ni verifica los errores. El protocolo UDP env\u00eda continuamente datos al destinatario pero sin comprobar que este los reciba.active</p> <p>Normalmente cuando hablamos de TCP hablamos del famoso Three-Way Handshake que es que a la hora de entablar una conexi\u00f3n solemos hacer una serie de \"pasos\" que son: SYN, SYN-ACK y ACK.</p> <p>Esto lo tenemos que ver como una comunicaci\u00f3n:</p> <ul> <li> <p>Imaginemos que estamos con un compa\u00f1ero y que comenzamos una conversaci\u00f3n, que es lo que considerariamos como el SYN.</p> </li> <li> <p>Entonces una vez hemos hablado a nuestro compa\u00f1ero se inicia la conexi\u00f3n con nostros para comunicarnos, que es lo que se considerar\u00eda el SYN-ACK.</p> </li> <li> <p>Y finalmente tendr\u00edamos un ACK, que ser\u00eda que nuestro compa\u00f1ero nos reconoce y os responde.</p> </li> </ul> <p>Por ejemplo supongamos un ejemplo pr\u00e1ctico donde vamos a usar la herramienta wireshark para analizar una red. En este caso por ejemplo vamos a monitorizar nuestra loopback. Buscamos <code>Loopback: lo</code> en nuestro wireshark.</p> <ul> <li> <p>Nos vamos a poner en escucha por el puerto 4646:</p> <p><pre><code>nc -nlvp 4646\n</code></pre> <pre><code>listening on [any] 4646 ...\n</code></pre> </p> </li> <li> <p>Ahora vamos a intentar conectarnos con netcat, que es una herramienta que usaremos para ponernos en escucha, para tratar de enviar datos, de recibir datos, de enviar reverse shells, etc. Vamos a intentar conectarnos a nuestro equipo por el puerto 4646:</p> <p><pre><code>nc 192.168.1.132 4646\n</code></pre> <pre><code>listening on [any] 4646 ...\nconnect to [192.168.1.132] from (UNKNOWN) [192.168.1.132] 46900\n</code></pre> </p> </li> <li> <p>Si ahora nos vamos anuestro wireshark podemos ver algo similar a lo siguiente:</p> <p></p> </li> </ul> <p>Y esto es lo que ver\u00edamos en cualquier lugar donde entablemos una conexi\u00f3n por el protocolo TCP.</p> <p>Ahora bien, cuando tratemos de comprometer una m\u00e1quina con un SO ya sea Linux o Windows, en cuanto a puertos respecta, un servicio puede estar operando por un puerto tanto por TCP como UDP como por otros protocolos.</p> <p>Entonces, en cuanto a escaneos respecta, nosotros como atacantes vamos a tener que tratar de identificar estos servicios con una herrameinta que se llama nmap. Y veremos que no es lo mismo revisar un escaneo por TCP que por UDP. Los par\u00e1metros cambian y operamos por distintos protocolos. En total hay unos 65535 puertos por los cuales podemos estar operando.</p> <p>Y en cuanto a servicios respecta, hay una infinidad de servicios.</p>"},{"location":"conceptos-basicos/subnetting/","title":"Subnetting","text":"Nota <p>Subnetting es una t\u00e9cnica utilizada para dividir una red IP en subredes m\u00e1s peque\u00f1as y manejables. Esto se logra mediante el uso de m\u00e1scaras de red, que permiten definir qu\u00e9 bits de la direcci\u00f3n IP corresponden a la red y cu\u00e1les a los hosts.</p> <p>Para interpretar una m\u00e1scara de red, se deben identificar los bits que est\u00e1n en \"1\". Estos bits representan la porci\u00f3n de la direcci\u00f3n IP que corresponde a la red. Por ejemplo, una m\u00e1scara de red de 255.255.255.0 indica que los primeros tres octetos de la direcci\u00f3n IP corresponden a la red, mientras que el \u00faltimo octeto se utiliza para identificar los hosts.</p> <p>Ahora bien, cuando hablamos de CIDR (acr\u00f3nimo de Classless Inter-Domain Routing), a lo que nos referimos es a un m\u00e9todo de asignaci\u00f3n de direcciones IP m\u00e1s eficiente y flexible que el uso de clases de redes IP fijas. Con CIDR, una direcci\u00f3n IP se representa mediante una direcci\u00f3n IP base y una m\u00e1scara de red, que se escriben juntas separadas por una barra (/).</p> <p>Por ejemplo, la direcci\u00f3n IP 192.168.1.1 con una m\u00e1scara de red de 255.255.255.0 se escribir\u00eda como 192.168.1.1/24.</p> <p>La m\u00e1scara de red se representa en notaci\u00f3n de prefijo, que indica el n\u00famero de bits que est\u00e1n en \"1\" en la m\u00e1scara. En este caso, la m\u00e1scara de red 255.255.255.0 tiene 24 bits en \"1\" (los primeros tres octetos), por lo que su notaci\u00f3n de prefijo es /24.</p> <p>Para calcular la m\u00e1scara de red a partir de una notaci\u00f3n de prefijo, se deben escribir los bits \"1\" en los primeros bits de una direcci\u00f3n IP de 32 bits y los bits \"0\" en los bits restantes. Por ejemplo, la m\u00e1scara de red /24 se calcular\u00eda como 11111111.11111111.11111111.00000000 en binario, lo que equivale a 255.255.255.0 en decimal.</p> <p>Podemos ver la m\u00e1scara de red con el comando <code>ifconfig</code>:</p> Ejemplo <p><pre><code>ifconfig\n</code></pre> <pre><code>enp0s3: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500\n    inet 192.168.1.132  netmask 255.255.255.0  broadcast 192.168.1.255\n    inet6 fe80::b79e:5c10:c25c:8701  prefixlen 64  scopeid 0x20&lt;link&gt;\n    ether 08:00:27:2d:73:8e  txqueuelen 1000  (Ethernet)\n    RX packets 21  bytes 2069 (2.0 KiB)\n    RX errors 0  dropped 8  overruns 0  frame 0\n    TX packets 21  bytes 3364 (3.2 KiB)\n    TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n</code></pre> </p> <p>Y gracias a esto nos podemos hacer una idea de c\u00f3mo est\u00e1 estructurada la red y adem\u00e1s podemos sacar conclusiones para saber como aplicar un escaneo a nivel de red para encontrar equipos conectados y en funci\u00f3n de la m\u00e1scara de red que veamos representada, teniendo en cuenta las clases y dem\u00e1s cosas.</p> <p>El subnetting como tal consiste en dividir una red grande en redes m\u00e1s peque\u00f1as. Es una labor que se debe realizar con mucho cuidado y planificaci\u00f3n para no desaprovechar direcciones IPv4.</p> <p>Por ejemplo, normalmente esta es la informaci\u00f3n que tendremos que saber sobre las direcciones IP:</p> TIPO DECIMAL BINARIO Direcci\u00f3n IP 192.168.0.101 11000000.10101000.00000000.01100101 M\u00e1scara de subred 255.255.255.0 11111111.11111111.11111111.00000000 Subnetting CIDR M\u00c1SCARA DE SUBRED M\u00c1SCARA COMOD\u00cdN DIRECCIONES IP DIRECCIONES IP UTILIZABLES /32 255.255.255.255 0.0.0.0 1 1 /31 255.255.255.254 0.0.0.1 2 2* /30 255.255.255.252 0.0.0.3 4 2 /29 255.255.255.248 0.0.0.7 8 6 /28 255.255.255.240 0.0.0.15 16 14 /27 255.255.255.224 0.0.0.31 32 30 /26 255.255.255.192 0.0.0.63 64 62 /25 255.255.255.128 0.0.0.127 128 126 /24 255.255.255.0 0.0.0.255 256 254 /23 255.255.254.0 0.0.1.255 512 510 /22 255.255.252.0 0.0.3.255 1.024 1.022 /21 255.255.248.0 0.0.7.255 2.048 2.046 /20 255.255.240.0 0.0.15.255 4.096 4.094 /19 255.255.224.0 0.0.31.255 8.192 8.190 /18 255.255.192.0 0.0.63.255 16.384 16.382 /17 255.255.128.0 0.0.127.255 32.768 32.766 /16 255.255.0.0 0.0.255.255 65.536 65.534 /15 255.254.0.0 0.1.255.255 131.072 131.070 /14 255.252.0.0 0.3.255.255 262.144 262.142 /13 255.248.0.0 0.7.255.255 524.288 524.286 /12 255.240.0.0 0.15.255.255 1.048.576 1.048.574 /11 255.224.0.0 0.31.255.255 2.097.152 2.097.150 /10 255.192.0.0 0.63.255.255 4.194.304 4.194.302 /9 255.128.0.0 0.127.255.255 8.388.608 8.388.606 /8 255.0.0.0 0.255.255.255 16.777.216 16.777.214 /7 254.0.0.0 1.255.255.255 33.554.432 33.554.430 /6 252.0.0.0 3.255.255.255 67.108.864 67.108.862 /5 248.0.0.0 7.255.255.255 134.217.728 134.217.726 /4 240.0.0.0 15.255.255.255 268.435.456 268.435.454 /3 224.0.0.0 31.255.255.255 536.870.912 536.870.910 /2 192.0.0.0 63.255.255.255 1.073.741.824 1.073.741.822 /1 128.0.0.0 127.255.255.255 2.147.483.648 2.147.483.646 /0 0.0.0.0 255.255.255.255 4.294.967.296 4.294.967.294 <p>Y tambi\u00f1en hemos dicho que las redes se pueden dividir por clases, en este caso podemos verlo de la siguiente manera:</p> octeto octeto octeto octeto Clase A Red Host Host Host Clase B Red Red Host Host Clase C Red Red Red Host Nota <p>En cuanto a clases de direcciones IP, existen tres tipos de m\u00e1scaras de red: Clase A, Clase B y Clase C.</p> <ul> <li>Las redes de clase A usan una m\u00e1scara de subred predeterminada de 255.0.0.0 y tienen de 0 a 127 como su primer octeto. La direcci\u00f3n 10.52.36.11, por ejemplo, es una direcci\u00f3n de clase A. Su primer octeto es 10, que est\u00e1 entre 1 y 126, ambos incluidos.</li> <li>Las redes de clase B usan una m\u00e1scara de subred predeterminada de 255.255.0.0 y tienen de 128 a 191 como su primer octeto. La direcci\u00f3n 172.16.52.63, por ejemplo, es una direcci\u00f3n de clase B. Su primer octeto es 172, que est\u00e1 entre 128 y 191, ambos inclusive.</li> <li>Las redes de clase C usan una m\u00e1scara de subred predeterminada de 255.255.255.0 y tienen de 192 a 223 como su primer octeto. La direcci\u00f3n 192.168.123.132, por ejemplo, es una direcci\u00f3n de clase C. Su primer octeto es 192, que est\u00e1 entre 192 y 223, ambos incluidos.</li> </ul> <p>Es importante tener en cuenta que, adem\u00e1s de estos tres tipos de m\u00e1scaras de red, tambi\u00e9n existen m\u00e1scaras de red personalizadas que se pueden utilizar para crear subredes de diferentes tama\u00f1os dentro de una red.</p> <p>Tal y como mencionamos en la descripci\u00f3n de la clase anterior sobre los CIDRs (Classless Inter-Domain Routing), se trata de un m\u00e9todo de asignaci\u00f3n de direcciones IP que permite dividir una direcci\u00f3n IP en una parte que identifica la red y otra parte que identifica el host. Esto se logra mediante el uso de una m\u00e1scara de red, que se representa en notaci\u00f3n CIDR como una direcci\u00f3n IP base seguida de un n\u00famero que indica la cantidad de bits que corresponden a la red.</p> <p>Con CIDR, se pueden asignar direcciones IP de forma m\u00e1s precisa, lo que reduce la cantidad de direcciones IP desperdiciadas y facilita la administraci\u00f3n de la red.</p> <p>El n\u00famero que sigue a la direcci\u00f3n IP base en la notaci\u00f3n CIDR se llama prefijo o longitud de prefijo, y representa el n\u00famero de bits en la m\u00e1scara de red que est\u00e1n en \"1\".</p> <p>Por ejemplo, una direcci\u00f3n IP con un prefijo de /24 indica que los primeros 24 bits de la direcci\u00f3n IP corresponden a la red, mientras que los 8 bits restantes se utilizan para identificar los hosts.</p> <p>Para calcular la cantidad de hosts disponibles en una red CIDR, se deben contar el n\u00famero de bits \"0\" en la m\u00e1scara de red y elevar 2 a la potencia de ese n\u00famero. Esto se debe a que cada bit \"0\" en la m\u00e1scara de red representa un bit que se puede utilizar para identificar un host.</p> <p>Por ejemplo, una m\u00e1scara de red de 255.255.255.0 (/24) tiene 8 bits en \"0\", lo que significa que hay 2^8 = 256 direcciones IP disponibles para los hosts en esa red.</p> <p>A continuaci\u00f3n, se representan algunos ejemplos pr\u00e1cticos de CIDR:</p> <ul> <li>Una direcci\u00f3n IP con un prefijo de /28 (255.255.255.240) permite hasta 16 direcciones IP para los hosts (2^4), ya que los primeros 28 bits corresponden a la red.</li> <li>Una direcci\u00f3n IP con un prefijo de /26 (255.255.255.192) permite hasta 64 direcciones IP para los hosts (2^6), ya que los primeros 26 bits corresponden a la red.</li> <li>Una direcci\u00f3n IP con un prefijo de /22 (255.255.252.0) permite hasta 1024 direcciones IP para los hosts (2^10), ya que los primeros 22 bits corresponden a la red.</li> </ul> <p>Si a\u00fan te quedan dudas y necesitas reforzar el contenido con m\u00e1s ejemplos pr\u00e1cticos, no te preocupes, en las clases siguientes estaremos entrando mucho m\u00e1s en materia.</p> Nota <p>En esta m\u00f3dulo, explicamos c\u00f3mo calcular para la direcci\u00f3n IP 192.168.1.0/26, su m\u00e1scara de red, el n\u00famero total de hosts a repartir, el identificador de red y la direcci\u00f3n Broadcast.</p> <p>A continuaci\u00f3n, se detalla paso a paso c\u00f3mo hemos ido calculando cada apartado:</p> <ol> <li> <p>C\u00e1lculo de la m\u00e1scara de red:</p> <p>La direcci\u00f3n IP que se nos dio es 192.168.1.0/26, lo que significa que los primeros 26 bits de la direcci\u00f3n IP corresponden a la red y los \u00faltimos 6 bits corresponden a los hosts.</p> <p>Para calcular la m\u00e1scara de red, necesitamos colocar los primeros 26 bits en 1 y los \u00faltimos 6 bits en 0. En binario, esto se ve as\u00ed:</p> <ul> <li>1111111.11111111.11111111.11000000</li> </ul> <p>Cada octeto de la m\u00e1scara de red se compone de 8 bits. El valor de cada octeto se determina convirtiendo los 8 bits a decimal. En este caso, los primeros 24 bits son todos 1s, lo que significa que el valor decimal de cada uno de estos octetos es 255. El \u00faltimo octeto tiene los \u00faltimos 6 bits en 0, lo que significa que su valor decimal es 192.</p> <p>Por lo tanto, la m\u00e1scara de red para esta direcci\u00f3n IP es 255.255.255.192.</p> </li> <li> <p>C\u00e1lculo del total de hosts a repartir:</p> <p>En este caso, se pueden utilizar los 6 bits que quedan disponibles para representar la parte de host. En una m\u00e1scara de red de 26 bits, los 6 bits restantes representan 2^6 \u2013 2 = 62 hosts disponibles para asignar.</p> <p>El n\u00famero m\u00e1ximo de hosts disponibles se calcula como 2^(n) \u2013 2, donde n es la cantidad de bits utilizados para representar la parte de host en la m\u00e1scara de red.</p> </li> <li> <p>C\u00e1lculo del Network ID:</p> <p>Para calcular el Network ID, lo que debemos hacer es aplicar la m\u00e1scara de red a la direcci\u00f3n IP de la red. En este caso, la m\u00e1scara de red es 255.255.255.192, lo que significa que los primeros 26 bits de la direcci\u00f3n IP pertenecen a la parte de red.</p> <p>Para calcular el Network ID, convertimos tanto la direcci\u00f3n IP como la m\u00e1scara de red en binario y luego hacemos una operaci\u00f3n \"AND\" l\u00f3gica entre los dos. La operaci\u00f3n \"AND\" compara los bits correspondientes en ambas direcciones y devuelve un resultado en el que todos los bits coincidentes son iguales a \"1\" y todos los bits no coincidentes son iguales a \"0\".</p> <p>En este caso, la direcci\u00f3n IP es 192.168.1.0 en decimal y se convierte en binario como 11000000.10101000.00000001.00000000. La m\u00e1scara de red es 255.255.255.192 en decimal y se convierte en binario como 11111111.11111111.11111111.11000000.</p> <p>Luego, aplicamos la operaci\u00f3n \"AND\" entre estos dos valores binarios bit a bit. Los bits correspondientes en ambos valores se comparan de la siguiente manera:</p> <pre><code>11000000.10101000.00000001.00000000 (direcci\u00f3n IP)\n11111111.11111111.11111111.11000000 (m\u00e1scara de red)\n-----------------------------------\n11000000.10101000.00000001.00000000 (resultado de la operaci\u00f3n \"AND\")\n</code></pre> <p>El resultado final es el Network ID, que es 192.168.1.0. Este es el identificador \u00fanico de la subred a la que pertenecen los hosts.</p> </li> <li> <p>C\u00e1lculo de la Broadcast Address:</p> <p>La Broadcast Address es la direcci\u00f3n de red que se utiliza para enviar paquetes a todos los hosts de la subred. Para calcularla, necesitamos saber el Network ID y la cantidad de hosts disponibles en la subred.</p> <p>En el ejemplo que estamos trabajando, ya hemos calculado el Network ID como 192.168.1.0. La cantidad de hosts disponibles se calcula como 2^(n) \u2013 2, donde n es la cantidad de bits utilizados para representar la parte de host en la m\u00e1scara de red. En este caso, n es igual a 6, ya que hay 6 bits disponibles para la parte de host.</p> <p>Para calcular la Broadcast Address, debemos asignar todos los bits de la parte del host de la direcci\u00f3n IP a \"1\". En este caso, la direcci\u00f3n IP es 192.168.1.0 y se convierte en binario como 11000000.10101000.00000001.00000000.</p> <p>Para encontrar la direcci\u00f3n Broadcast, llenamos con unos la parte correspondiente a los bits de host, es decir, los \u00faltimos 6 bits:</p> <p>11000000.10101000.00000001.00111111 (direcci\u00f3n IP con bits de host asignados a \"1\")</p> <p>Luego, convertimos este valor binario de regreso a decimal y obtenemos la direcci\u00f3n de Broadcast: 192.168.1.63. Esta es la direcci\u00f3n a la que se enviar\u00e1n los paquetes para llegar a todos los hosts de la subred.</p> </li> </ol>"},{"location":"conceptos-basicos/subnetting/#cuestionario-de-subnetting","title":"Cuestionario de Subnetting","text":"<p>Pregunta 1 / 24</p> <p>Indica el n\u00famero de hosts totales utilizables a repartir para la m\u00e1scara de red representada</p> M\u00e1scara de Red Host totales 255.255.255.128 255.255.254.0 255.255.128.0 255.224.0.0 255.128.0.0 0.0.0.0 <ul> <li> 4.294.967.294 hosts</li> <li> 2.097.150 hosts</li> <li> 510 hosts</li> <li> 126 hosts</li> <li> 8.388.606 hosts</li> <li> 32.766 hosts</li> </ul> Soluci\u00f3n <ul> <li>255.255.255.128  126 hosts</li> <li>255.255.254.0  510 hosts</li> <li>255.255.128.0  32.766 hosts</li> <li>255.224.0.0  2.097.150 hosts</li> <li>255.128.0.0  8.388.606 hosts</li> <li>0.0.0.0  4.294.967.294 hosts</li> </ul> <p>Pregunta 2 / 24</p> <p>\u00bfCu\u00e1l es la m\u00e1scara de red correcta para una direcci\u00f3n IP de clase B?</p> <ul> <li> 255.0.0.0</li> <li> 255.255.0.0</li> <li> 255.255.255.0</li> </ul> Soluci\u00f3n <ul> <li> 255.0.0.0</li> <li> 255.255.0.0</li> <li> 255.255.255.0</li> </ul> <p>Pregunta 3 / 24</p> <p>\u00bfEn qu\u00e9 capa del modelo OSI se lleva a cabo el enrutamiento de paquetes?</p> <ul> <li> Capa de Transporte</li> <li> Capa de Red</li> <li> Capa de enlace de Datos</li> </ul> Soluci\u00f3n <ul> <li> Capa de Transporte</li> <li> Capa de Red</li> <li> Capa de enlace de Datos</li> </ul>"}]}